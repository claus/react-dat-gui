{"version":3,"file":"index.es.js","sources":["../src/components/DatString.js","../src/components/utils.js","../src/components/Slider.js","../src/components/DatNumber.js","../src/components/DatBoolean.js","../src/components/DatButton.js","../src/components/DatFolder.js","../src/components/DatSelect.js","../src/components/Picker/Fields.js","../src/components/Picker/Pointer.js","../src/components/Picker/PointerCircle.js","../src/components/Picker/index.js","../src/components/DatColor.js","../src/components/DatPresets.js","../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isString from 'lodash.isstring';\nimport result from 'lodash.result';\nimport cx from 'classnames';\n\nexport default class DatString extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    data: PropTypes.object.isRequired,\n    path: PropTypes.string,\n    label: PropTypes.string,\n    labelWidth: PropTypes.string.isRequired,\n    liveUpdate: PropTypes.bool.isRequired,\n    onUpdate: PropTypes.func,\n    _onUpdateValue: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    path: null,\n    label: null,\n    onUpdate: () => null\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      value: null\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const nextValue = result(nextProps.data, nextProps.path);\n\n    if (prevState.value === nextValue) return null;\n\n    return {\n      value: nextValue\n    };\n  }\n\n  handleChange = event => {\n    const { value } = event.target;\n    const { liveUpdate } = this.props;\n\n    if (liveUpdate) this.update(value);\n  };\n\n  handleFocus = () => {\n    document.addEventListener('keydown', this.handleKeyDown);\n  };\n\n  handleBlur = () => {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    window.getSelection().removeAllRanges();\n\n    const { liveUpdate } = this.props;\n    if (!liveUpdate) this.update();\n  };\n\n  handleKeyDown = event => {\n    const key = event.keyCode || event.which;\n    const { liveUpdate } = this.props;\n\n    if (key === 13 && !liveUpdate) this.update();\n  };\n\n  update(value) {\n    const { _onUpdateValue, onUpdate, path } = this.props;\n    _onUpdateValue(path, value);\n    onUpdate(value);\n  }\n\n  render() {\n    const { path, label, labelWidth, className, style } = this.props;\n    const labelText = isString(label) ? label : path;\n\n    return (\n      <li className={cx('cr', 'string', className)} style={style}>\n        <label>\n          <span className=\"label-text\" style={{ width: labelWidth }}>\n            {labelText}\n          </span>\n          <input\n            style={{ width: `calc(100% - ${labelWidth})` }}\n            type=\"text\"\n            value={this.state.value}\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n          />\n        </label>\n      </li>\n    );\n  }\n}\n","/* eslint-disable no-restricted-globals */\nexport function toNumber(value) {\n  const float = parseFloat(value);\n  return isNaN(float) ? 0 : float;\n}\n\n/**\n * Polyfill for isInteger.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger#Polyfill\n * @param {number} value\n * @return {bool}\n */\nexport const isInteger =\n  Number.isInteger ||\n  // eslint-disable-next-line func-names\n  function(value) {\n    return (\n      typeof value === 'number' &&\n      isFinite(value) &&\n      Math.floor(value) === value\n    );\n  };\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport clamp from 'lodash.clamp';\nimport cx from 'classnames';\nimport { toNumber } from './utils';\n\nexport default class Slider extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    min: PropTypes.number,\n    max: PropTypes.number,\n    width: PropTypes.number,\n    onUpdate: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    value: null,\n    min: null,\n    max: null,\n    width: null\n  };\n\n  constructor() {\n    super();\n    this.state = { value: null };\n    this.sliderRef = React.createRef();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const nextValue = toNumber(nextProps.value);\n\n    if (prevState.value === nextValue) return null;\n\n    return {\n      value: nextValue\n    };\n  }\n\n  handleMouseDown = event => {\n    this.update(event.pageX);\n\n    window.addEventListener('mousemove', this.handleMouseMove);\n    window.addEventListener('mouseup', this.handleMouseUp);\n  };\n\n  handleMouseMove = event => {\n    this.update(event.pageX);\n\n    event.preventDefault();\n  };\n\n  handleMouseUp = event => {\n    this.update(event.pageX, false);\n\n    window.removeEventListener('mousemove', this.handleMouseMove);\n    window.removeEventListener('mouseup', this.handleMouseUp);\n  };\n\n  handleClick = event => {\n    // do not focus input field on slider click\n    event.preventDefault();\n  };\n\n  update(pageX, isLive = true) {\n    const { min, max, onUpdate } = this.props;\n    const rect = this.sliderRef.current.getBoundingClientRect();\n    const x = pageX - rect.left;\n    const w = rect.right - rect.left;\n    const value = min + clamp(x / w, 0, 1) * (max - min);\n\n    this.setState({ value }, () => {\n      onUpdate(value, isLive);\n    });\n  }\n\n  render() {\n    const { min, max, width, className, style } = this.props;\n    const { value } = this.state;\n    const widthBackground = clamp(((value - min) * 100) / (max - min), 0, 100);\n    const sliderStyles = {\n      width: `${width}%`,\n      backgroundSize: `${widthBackground}% 100%`,\n      ...style\n    };\n\n    return (\n      <span\n        ref={this.sliderRef}\n        className={cx('slider', className)}\n        style={sliderStyles}\n        onClick={this.handleClick}\n        onMouseDown={this.handleMouseDown}\n        role=\"slider\"\n        tabIndex={0}\n        aria-valuenow={value}\n        aria-valuemin={min}\n        aria-valuemax={max}\n      />\n    );\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isFinite from 'lodash.isfinite';\nimport isString from 'lodash.isstring';\nimport result from 'lodash.result';\nimport cx from 'classnames';\nimport Slider from './Slider';\nimport { isInteger, toNumber } from './utils';\n\nconst applyConstraints = ({ value, min, max, step }) => {\n  const [hasMin, hasMax, hasStep] = [\n    isFinite(min),\n    isFinite(max),\n    isFinite(step)\n  ];\n  const decimalPlaces =\n    hasStep && !isInteger(step) ? step.toString().split('.')[1].length : 0;\n  let [isMin, isMax] = [false, false];\n\n  value = toNumber(value);\n\n  if (hasMin && value <= min) {\n    value = min;\n    isMin = true;\n  }\n\n  if (hasMax && value >= max) {\n    value = max;\n    isMax = true;\n  }\n\n  if (!isMin && !isMax) {\n    if (hasStep && step !== 0) {\n      value = Math.round(value / step) * step;\n    }\n  }\n\n  return value.toFixed(decimalPlaces);\n};\n\nexport default class DatNumber extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    data: PropTypes.object.isRequired,\n    path: PropTypes.string,\n    label: PropTypes.string,\n    labelWidth: PropTypes.string.isRequired,\n    _onUpdateValue: PropTypes.func.isRequired,\n    disableSlider: PropTypes.bool\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    min: null,\n    max: null,\n    step: null,\n    path: null,\n    label: null,\n    disableSlider: null\n  };\n\n  constructor() {\n    super();\n    this.state = { value: null };\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    const { min, max, step } = nextProps;\n    const nextValue = applyConstraints({\n      value: result(nextProps.data, nextProps.path),\n      min,\n      max,\n      step\n    });\n\n    return {\n      value: nextValue\n    };\n  }\n\n  handleChange = event => {\n    const { value } = event.target;\n    this.update(value);\n  };\n\n  handleSliderUpdate = value => {\n    const { min, max, step } = this.props;\n\n    this.update(applyConstraints({ value, min, max, step }));\n  };\n\n  update = value => {\n    const { _onUpdateValue, path } = this.props;\n\n    _onUpdateValue(path, toNumber(value));\n  };\n\n  renderSlider(width) {\n    const { min, max } = this.props;\n    const { value } = this.state;\n\n    return (\n      <Slider\n        value={value}\n        min={min}\n        max={max}\n        width={width}\n        onUpdate={this.handleSliderUpdate}\n      />\n    );\n  }\n\n  render() {\n    const {\n      min,\n      max,\n      path,\n      label,\n      labelWidth,\n      step,\n      disableSlider,\n      className,\n      style\n    } = this.props;\n    const labelText = isString(label) ? label : path;\n    const hasSlider = isFinite(min) && isFinite(max);\n    const controlsWidth = 100;\n    const inputWidth =\n      hasSlider && disableSlider !== true\n        ? Math.round(controlsWidth / 3)\n        : controlsWidth;\n    const sliderWidth = controlsWidth - inputWidth;\n\n    return (\n      <li className={cx('cr', 'number', className)} style={style}>\n        <label>\n          <span className=\"label-text\" style={{ width: labelWidth }}>\n            {labelText}\n          </span>\n          <span\n            style={{ display: 'inherit', width: `calc(100% - ${labelWidth})` }}\n          >\n            {hasSlider && disableSlider !== true\n              ? this.renderSlider(sliderWidth)\n              : null}\n            <input\n              type=\"number\"\n              step={step}\n              min={min}\n              max={max}\n              inputMode=\"numeric\"\n              value={this.state.value}\n              style={{ width: `${inputWidth}%` }}\n              onChange={this.handleChange}\n            />\n          </span>\n        </label>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isString from 'lodash.isstring';\nimport result from 'lodash.result';\nimport cx from 'classnames';\n\nexport default class DatBoolean extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    data: PropTypes.object.isRequired,\n    path: PropTypes.string,\n    label: PropTypes.string,\n    labelWidth: PropTypes.string.isRequired,\n    _onUpdateValue: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    path: null,\n    label: null\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: null\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const nextValue = result(nextProps.data, nextProps.path);\n\n    if (prevState.value === nextValue) return null;\n\n    return {\n      value: nextValue\n    };\n  }\n\n  handleChange = event => {\n    const value = event.target.checked;\n    const { _onUpdateValue, path } = this.props;\n\n    _onUpdateValue(path, value);\n  };\n\n  render() {\n    const { path, label, labelWidth, className, style } = this.props;\n    const labelText = isString(label) ? label : path;\n\n    return (\n      <li className={cx('cr', 'boolean', className)} style={style}>\n        <label>\n          <span className=\"label-text\" style={{ width: labelWidth }}>\n            {labelText}\n          </span>\n          <span\n            className=\"checkbox-container\"\n            style={{ width: `calc(100% - ${labelWidth})` }}\n          >\n            <input\n              type=\"checkbox\"\n              checked={this.state.value}\n              onChange={this.handleChange}\n            />\n          </span>\n        </label>\n      </li>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nconst DatButton = ({ label, onClick, className, style }) => (\n  <li className={cx('cr', 'button', className)} style={style}>\n    <span\n      className=\"label-text\"\n      onClick={onClick}\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      {label}\n    </span>\n  </li>\n);\n\nDatButton.propTypes = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  label: PropTypes.string,\n  onClick: PropTypes.func.isRequired\n};\n\nDatButton.defaultProps = {\n  className: null,\n  style: null,\n  label: null\n};\n\nexport default DatButton;\n","import React, { Component, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nexport default class DatFolder extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    title: PropTypes.string,\n    closed: PropTypes.bool,\n    children: PropTypes.element.isRequired\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    title: 'Folder',\n    closed: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { closed: props.closed };\n  }\n\n  handleClick = () =>\n    this.setState(prevState => ({ closed: !prevState.closed }));\n\n  renderChildren() {\n    // Disable this rule to take title out of the props so nested folders can have unique titles.\n    // eslint-disable-next-line no-unused-vars\n    const { children, title, ...rest } = this.props;\n\n    return React.Children.map(children, child =>\n      cloneElement(child, { ...rest })\n    );\n  }\n\n  render() {\n    const { closed } = this.state;\n    const { title, className, style } = this.props;\n\n    return (\n      <li className={cx('folder', { closed }, className)} style={style}>\n        <div className=\"dg\">\n          <div\n            className=\"title\"\n            onClick={this.handleClick}\n            onKeyPress={this.handleClick}\n            role=\"button\"\n            tabIndex={0}\n          >\n            {title}\n          </div>\n          <ul>{this.renderChildren()}</ul>\n        </div>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isString from 'lodash.isstring';\nimport result from 'lodash.result';\nimport cx from 'classnames';\n\nexport default class DatSelect extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    data: PropTypes.object.isRequired,\n    path: PropTypes.string,\n    label: PropTypes.string,\n    options: PropTypes.array.isRequired,\n    optionLabels: PropTypes.array,\n    labelWidth: PropTypes.string.isRequired,\n    liveUpdate: PropTypes.bool.isRequired,\n    onUpdate: PropTypes.func,\n    _onUpdateValue: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    path: null,\n    label: null,\n    optionLabels: null,\n    onUpdate: () => null\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      value: null,\n      options: null\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    const nextValue = result(nextProps.data, nextProps.path);\n\n    return {\n      value: nextValue,\n      options: nextProps.options\n    };\n  }\n\n  handleChange = event => {\n    const { value } = event.target;\n    const { liveUpdate, _onUpdateValue, onUpdate, path } = this.props;\n    _onUpdateValue(path, value);\n    if (liveUpdate) onUpdate(value);\n  };\n\n  render() {\n    const {\n      path,\n      label,\n      labelWidth,\n      optionLabels,\n      className,\n      style\n    } = this.props;\n    const { value, options } = this.state;\n    const labelText = isString(label) ? label : path;\n\n    return (\n      <li className={cx('cr', 'select', className)} style={style}>\n        <label>\n          <span className=\"label-text\" style={{ width: labelWidth }}>\n            {labelText}\n          </span>\n          <select\n            value={value}\n            onChange={this.handleChange}\n            style={{ width: `calc(100% - ${labelWidth})` }}\n          >\n            {options.map((item, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <option key={index} value={item}>\n                {optionLabels ? optionLabels[index] : item}\n              </option>\n            ))}\n          </select>\n        </label>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { EditableInput } from 'react-color/lib/components/common';\nimport color from 'react-color/lib/helpers/color';\n\nexport default class Fields extends Component {\n  static propTypes = {\n    hex: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  handleChange = (value, e) => {\n    const { onChange } = this.props;\n\n    if (color.isValidHex(value))\n      onChange(\n        {\n          hex: value,\n          source: 'hex'\n        },\n        e\n      );\n  };\n\n  render() {\n    const { hex } = this.props;\n\n    return (\n      <div className=\"flexbox-fix fields-wrap\">\n        <div className=\"flexbox-fix fields\">\n          <div className=\"field\">\n            <EditableInput value={hex} onChange={this.handleChange} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst Pointer = () => <div className=\"pointer\" />;\n\nexport default Pointer;\n","import React from 'react';\n\nconst PointerCircle = () => <div className=\"pointer-circle\" />;\n\nexport default PointerCircle;\n","import { ColorWrap, Hue, Saturation } from 'react-color/lib/components/common';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Fields from './Fields';\nimport Pointer from './Pointer';\nimport PointerCircle from './PointerCircle';\n\nconst Picker = ({ onChange, hsl, hsv, hex, className = '' }) => {\n  return (\n    <div className={`picker ${className}`}>\n      <div className=\"saturation-wrap\">\n        <Saturation\n          className=\"saturation\"\n          hsl={hsl}\n          hsv={hsv}\n          pointer={PointerCircle}\n          onChange={onChange}\n        />\n      </div>\n      <div className=\"body\">\n        <div className=\"controls\">\n          <div className=\"toggles\">\n            <div className=\"hue-wrap\">\n              <Hue\n                className=\"hue\"\n                hsl={hsl}\n                pointer={Pointer}\n                onChange={onChange}\n              />\n            </div>\n          </div>\n        </div>\n        <Fields hex={hex} onChange={onChange} />\n      </div>\n    </div>\n  );\n};\n\nPicker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  hsl: PropTypes.string,\n  hsv: PropTypes.string,\n  hex: PropTypes.string,\n  className: PropTypes.string,\n  disableAlpha: PropTypes.bool\n};\n\nPicker.defaultProps = {\n  hsl: null,\n  hsv: null,\n  hex: null,\n  className: null,\n  disableAlpha: false\n};\n\nexport default ColorWrap(Picker);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isString from 'lodash.isstring';\nimport result from 'lodash.result';\nimport cx from 'classnames';\nimport ColorPicker from './Picker';\n\nexport default class DatColor extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    data: PropTypes.object.isRequired,\n    path: PropTypes.string,\n    label: PropTypes.string,\n    labelWidth: PropTypes.string.isRequired,\n    _onUpdateValue: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    path: null,\n    label: null\n  };\n\n  constructor() {\n    super();\n\n    this.state = {\n      value: null,\n      displayColorPicker: false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const nextValue = result(nextProps.data, nextProps.path);\n\n    return {\n      ...prevState,\n      value: nextValue\n    };\n  }\n\n  handleClickColorPicker = () =>\n    this.setState(prevState => ({\n      ...prevState,\n      displayColorPicker: !prevState.displayColorPicker\n    }));\n\n  handleCloseColorPicker = () =>\n    this.setState({\n      displayColorPicker: false\n    });\n\n  handleChangeColor = color => {\n    const value = isString(color) ? color : color.hex;\n    const { _onUpdateValue, path } = this.props;\n\n    _onUpdateValue(path, value);\n  };\n\n  renderPicker() {\n    const { value, displayColorPicker } = this.state;\n\n    return !displayColorPicker ? null : (\n      <div className=\"popover\">\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <div\n          className=\"cover\"\n          onClick={this.handleCloseColorPicker}\n          onKeyPress={this.handleCloseColorPicker}\n          role=\"button\"\n          tabIndex={0}\n        />\n        <ColorPicker color={value} onChange={this.handleChangeColor} />\n      </div>\n    );\n  }\n\n  render() {\n    const { path, label, labelWidth, className, style } = this.props;\n    const { value } = this.state;\n    const labelText = isString(label) ? label : path;\n\n    return (\n      <li\n        className={cx('cr', 'color', className)}\n        style={{ borderLeftColor: `${value}`, ...style }}\n      >\n        <label>\n          <span className=\"label-text\" style={{ width: labelWidth }}>\n            {labelText}\n          </span>\n          <div\n            style={{\n              backgroundColor: value,\n              width: `calc(100% - ${labelWidth})`\n            }}\n          >\n            <div\n              className=\"swatch\"\n              onClick={this.handleClickColorPicker}\n              onKeyPress={this.handleClickColorPicker}\n              role=\"button\"\n              tabIndex={0}\n            >\n              {value}\n            </div>\n            {this.renderPicker()}\n          </div>\n        </label>\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash.clonedeep';\nimport isString from 'lodash.isstring';\nimport cx from 'classnames';\n\nconst DEFAULT_PRESET_KEY = 'Default';\n\nexport default class DatPresets extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    style: PropTypes.object,\n    data: PropTypes.object.isRequired,\n    path: PropTypes.string,\n    label: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired,\n    labelWidth: PropTypes.string.isRequired,\n    liveUpdate: PropTypes.bool.isRequired,\n    onUpdate: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    className: null,\n    style: null,\n    path: null\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      defaultPreset: null,\n      options: null\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const nextValue = cloneDeep(nextProps.data);\n    const defaultPreset = prevState.defaultPreset\n      ? prevState.defaultPreset\n      : nextValue;\n\n    return {\n      defaultPreset,\n      options: [\n        { [DEFAULT_PRESET_KEY]: defaultPreset },\n        ...nextProps.options.filter(preset => {\n          return Object.keys(preset)[0] !== DEFAULT_PRESET_KEY;\n        })\n      ]\n    };\n  }\n\n  handleChange = event => {\n    const value = JSON.parse(event.target.value);\n    const { liveUpdate, onUpdate } = this.props;\n\n    if (liveUpdate) onUpdate(value);\n  };\n\n  render() {\n    const { path, label, labelWidth, className, style } = this.props;\n    const { options } = this.state;\n    const labelText = isString(label) ? label : path;\n\n    return (\n      <li className={cx('cr', 'presets', className)} style={style}>\n        <label>\n          <span className=\"label-text\" style={{ width: labelWidth }}>\n            {labelText}\n          </span>\n          <select\n            onChange={this.handleChange}\n            style={{ width: `calc(100% - ${labelWidth})` }}\n          >\n            {options.map(preset => {\n              return Object.keys(preset).map(key => {\n                return (\n                  <option key={key} value={JSON.stringify(preset[key])}>\n                    {key}\n                  </option>\n                );\n              });\n            })}\n          </select>\n        </label>\n      </li>\n    );\n  }\n}\n","import React, { Component, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash.clonedeep';\nimport cx from 'classnames';\nimport isUndefined from 'lodash.isundefined';\nimport set from 'lodash.set';\nimport './style/dat.scss';\n\nexport default class DatGui extends Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n    children: PropTypes.node.isRequired,\n    onUpdate: PropTypes.func.isRequired,\n    liveUpdate: PropTypes.bool,\n    labelWidth: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object\n  };\n\n  static defaultProps = {\n    liveUpdate: true,\n    className: null,\n    style: null,\n    labelWidth: '40%'\n  };\n\n  handleUpdateValue = (path, value) => {\n    const { data, onUpdate } = this.props;\n    const dataUpdated = set(cloneDeep(data), path, value);\n\n    onUpdate(dataUpdated);\n  };\n\n  renderChildren() {\n    const { children, data } = this.props;\n\n    return React.Children.toArray(children).map((child, i) => {\n      const liveUpdate = isUndefined(child.props.liveUpdate)\n        ? this.props.liveUpdate\n        : child.props.liveUpdate;\n      const labelWidth = isUndefined(child.props.labelWidth)\n        ? this.props.labelWidth\n        : child.props.labelWidth;\n\n      return cloneElement(child, {\n        key: i,\n        data,\n        liveUpdate,\n        labelWidth,\n        _onUpdateValue: this.handleUpdateValue\n      });\n    });\n  }\n\n  render() {\n    const { style, className } = this.props;\n    const classNames = cx('react-dat-gui', className);\n\n    return (\n      <div className={classNames} style={style}>\n        <ul className=\"dg main\">{this.renderChildren()}</ul>\n      </div>\n    );\n  }\n}\n\nexport { default as DatString } from './components/DatString';\nexport { default as DatNumber } from './components/DatNumber';\nexport { default as DatBoolean } from './components/DatBoolean';\nexport { default as DatButton } from './components/DatButton';\nexport { default as DatFolder } from './components/DatFolder';\nexport { default as DatSelect } from './components/DatSelect';\nexport { default as DatColor } from './components/DatColor';\nexport { default as DatPresets } from './components/DatPresets';\n"],"names":["DatString","event","value","target","liveUpdate","props","update","document","addEventListener","handleKeyDown","removeEventListener","window","getSelection","removeAllRanges","key","keyCode","which","state","_onUpdateValue","onUpdate","path","label","labelWidth","className","style","labelText","isString","cx","width","handleChange","handleFocus","handleBlur","nextProps","prevState","nextValue","result","data","Component","toNumber","float","parseFloat","isNaN","isInteger","Number","isFinite","Math","floor","Slider","pageX","handleMouseMove","handleMouseUp","preventDefault","sliderRef","React","createRef","isLive","min","max","rect","current","getBoundingClientRect","x","left","w","right","clamp","setState","widthBackground","sliderStyles","backgroundSize","handleClick","handleMouseDown","applyConstraints","step","hasMin","hasMax","hasStep","decimalPlaces","toString","split","length","isMin","isMax","round","toFixed","DatNumber","handleSliderUpdate","disableSlider","hasSlider","controlsWidth","inputWidth","sliderWidth","display","renderSlider","DatBoolean","checked","DatButton","onClick","defaultProps","DatFolder","closed","children","title","rest","Children","map","child","cloneElement","renderChildren","DatSelect","options","optionLabels","item","index","Fields","e","onChange","color","isValidHex","hex","source","Pointer","PointerCircle","Picker","hsl","hsv","disableAlpha","ColorWrap","DatColor","displayColorPicker","handleCloseColorPicker","handleChangeColor","borderLeftColor","backgroundColor","handleClickColorPicker","renderPicker","DEFAULT_PRESET_KEY","DatPresets","JSON","parse","defaultPreset","preset","Object","keys","stringify","cloneDeep","filter","DatGui","dataUpdated","set","toArray","i","isUndefined","handleUpdateValue","classNames"],"mappings":"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"}